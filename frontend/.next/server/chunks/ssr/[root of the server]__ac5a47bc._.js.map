{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/agustincassani/Documents/projects/pay-link/frontend/src/app/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { PaymentSchema } from './schema';\n\ntype State = { error: string | null; success: boolean };\n\nexport async function createPayment(prevState: State, formData: FormData): Promise<State> {\n  try {\n    const rawData = {\n      amount: Number(formData.get('amount')),\n      currency: formData.get('currency'),\n      email: formData.get('email')\n    };\n\n    const validatedData = PaymentSchema.parse(rawData);\n\n    const response = await fetch('http://localhost:4000/api/checkout', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(validatedData),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Payment failed');\n    }\n\n    return { error: null, success: true };\n  } catch (error) {\n    if (error instanceof Error) {\n      return { error: error.message, success: false };\n    }\n    return { error: 'Something went wrong', success: false };\n  }\n}"],"names":[],"mappings":";;;;;IAMsB","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///Users/agustincassani/Documents/projects/pay-link/frontend/src/app/lib/schema.ts"],"sourcesContent":["import { z } from 'zod';\n\nexport const PaymentSchema = z.object({\n  amount: z.number({\n    required_error: \"Amount is required\",\n    invalid_type_error: \"Amount must be a number\",\n  }).positive(\"Amount must be greater than 0\"),\n  currency: z.string({\n    required_error: \"Currency is required\",\n  }).length(3, \"Currency must be a 3-letter code\"),\n  email: z.string({\n    required_error: \"Email is required\",\n  }).email(\"Please enter a valid email address\")\n});\n\nexport type Payment = z.infer<typeof PaymentSchema>;"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACf,gBAAgB;QAChB,oBAAoB;IACtB,GAAG,QAAQ,CAAC;IACZ,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACjB,gBAAgB;IAClB,GAAG,MAAM,CAAC,GAAG;IACb,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACd,gBAAgB;IAClB,GAAG,KAAK,CAAC;AACX","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///Users/agustincassani/Documents/projects/pay-link/frontend/src/app/components/PaymentForm.tsx"],"sourcesContent":["'use client';\n\nimport { useActionState } from 'react';\nimport { useFormStatus } from 'react-dom';\nimport { createPayment } from '../lib/actions';\nimport { PaymentSchema } from '../lib/schema';\nimport { useState } from 'react';\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n\n  return (\n    <button\n      type=\"submit\"\n      disabled={pending}\n      className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n    >\n      {pending ? 'Processing...' : 'Pay Now'}\n    </button>\n  );\n}\n\nexport default function PaymentForm() {\n  const [clientErrors, setClientErrors] = useState<{ [key: string]: string }>({});\n  const [state, formAction] = useActionState(createPayment, { error: null, success: false });\n\n  const handleSubmit = async (formData: FormData) => {\n    const rawData = {\n      amount: Number(formData.get('amount')),\n      currency: formData.get('currency'),\n      email: formData.get('email')\n    };\n\n    const result = PaymentSchema.safeParse(rawData);\n    if (!result.success) {\n      const errors: { [key: string]: string } = {};\n      result.error.issues.forEach((issue) => {\n        errors[issue.path[0].toString()] = issue.message;\n      });\n      setClientErrors(errors);\n      return;\n    }\n\n    setClientErrors({});\n    formAction(formData);\n  };\n\n  if (state.success) {\n    return (\n      <div className=\"p-6 max-w-sm mx-auto bg-white rounded-xl shadow-md\">\n        <div className=\"text-center\">\n          <h2 className=\"text-xl font-bold text-green-600\">Payment Successful!</h2>\n          <p className=\"mt-2 text-gray-600\">Thank you for your payment</p>\n        </div>\n      </div>\n    );\n  }\n\n  const getInputClassName = (fieldName: string) => {\n    const baseClasses = \"mt-1 block w-full rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 py-2.5 px-4\";\n    return `${baseClasses} ${clientErrors[fieldName] ? 'border-red-300' : 'border-gray-300'}`;\n  };\n\n  return (\n    <div className=\"p-6 max-w-sm mx-auto bg-white rounded-xl shadow-md\">\n      <form action={handleSubmit} className=\"space-y-4\">\n        <div>\n          <label htmlFor=\"amount\" className=\"block text-sm font-medium text-gray-700\">\n            Amount\n          </label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            name=\"amount\"\n            step=\"0.01\"\n            className={getInputClassName('amount')}\n          />\n          {clientErrors.amount && (\n            <p className=\"mt-1 text-sm text-red-600\" role=\"alert\">{clientErrors.amount}</p>\n          )}\n        </div>\n\n        <div>\n          <label htmlFor=\"currency\" className=\"block text-sm font-medium text-gray-700\">\n            Currency\n          </label>\n          <select\n            id=\"currency\"\n            name=\"currency\"\n            className={getInputClassName('currency')}\n          >\n            <option value=\"\">Select currency</option>\n            <option value=\"USD\">USD</option>\n            <option value=\"EUR\">EUR</option>\n            <option value=\"GBP\">GBP</option>\n          </select>\n          {clientErrors.currency && (\n            <p className=\"mt-1 text-sm text-red-600\" role=\"alert\">{clientErrors.currency}</p>\n          )}\n        </div>\n\n        <div>\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            className={getInputClassName('email')}\n          />\n          {clientErrors.email && (\n            <p className=\"mt-1 text-sm text-red-600\" role=\"alert\">{clientErrors.email}</p>\n          )}\n        </div>\n\n        {state.error && (\n          <div className=\"p-3 bg-red-50 border border-red-200 rounded-md\">\n            <p className=\"text-red-600 text-sm\" role=\"alert\">{state.error}</p>\n          </div>\n        )}\n\n        <SubmitButton />\n      </form>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}