{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/agustincassani/Documents/projects/pay-link/frontend/src/app/components/PaymentForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\n\ninterface PaymentFormData {\n  amount: number;\n  currency: string;\n  email: string;\n}\n\nexport default function PaymentForm() {\n  const [formData, setFormData] = useState<PaymentFormData>({\n    amount: 0,\n    currency: 'USD',\n    email: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    try {\n      const response = await fetch('http://localhost:4000/api/checkout', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Payment failed');\n      }\n\n      setSuccess(true);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Payment failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (success) {\n    return (\n      <div className=\"p-6 max-w-sm mx-auto bg-white rounded-xl shadow-md\">\n        <div className=\"text-center\">\n          <h2 className=\"text-xl font-bold text-green-600\">Payment Successful!</h2>\n          <p className=\"mt-2 text-gray-600\">Thank you for your payment</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 max-w-sm mx-auto bg-white rounded-xl shadow-md\">\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div>\n          <label htmlFor=\"amount\" className=\"block text-sm font-medium text-gray-700\">\n            Amount\n          </label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            step=\"0.01\"\n            required\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n            value={formData.amount}\n            onChange={(e) => setFormData({ ...formData, amount: parseFloat(e.target.value) })}\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"currency\" className=\"block text-sm font-medium text-gray-700\">\n            Currency\n          </label>\n          <select\n            id=\"currency\"\n            required\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n            value={formData.currency}\n            onChange={(e) => setFormData({ ...formData, currency: e.target.value })}\n          >\n            <option value=\"USD\">USD</option>\n            <option value=\"EUR\">EUR</option>\n            <option value=\"GBP\">GBP</option>\n          </select>\n        </div>\n\n        <div>\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            required\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n            value={formData.email}\n            onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n          />\n        </div>\n\n        {error && (\n          <div className=\"text-red-600 text-sm\">{error}</div>\n        )}\n\n        <button\n          type=\"submit\"\n          disabled={loading}\n          className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n        >\n          {loading ? 'Processing...' : 'Pay Now'}\n        </button>\n      </form>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAUe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAmB;QACxD,QAAQ;QACR,UAAU;QACV,OAAO;IACT;IACA,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,sCAAsC;gBACjE,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI;YAChC;YAEA,WAAW;QACb,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,WAAW;QACb;IACF;IAEA,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,6LAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;;;;;;IAI1C;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAK,UAAU;YAAc,WAAU;;8BACtC,6LAAC;;sCACC,6LAAC;4BAAM,SAAQ;4BAAS,WAAU;sCAA0C;;;;;;sCAG5E,6LAAC;4BACC,MAAK;4BACL,IAAG;4BACH,MAAK;4BACL,QAAQ;4BACR,WAAU;4BACV,OAAO,SAAS,MAAM;4BACtB,UAAU,CAAC,IAAM,YAAY;oCAAE,GAAG,QAAQ;oCAAE,QAAQ,WAAW,EAAE,MAAM,CAAC,KAAK;gCAAE;;;;;;;;;;;;8BAInF,6LAAC;;sCACC,6LAAC;4BAAM,SAAQ;4BAAW,WAAU;sCAA0C;;;;;;sCAG9E,6LAAC;4BACC,IAAG;4BACH,QAAQ;4BACR,WAAU;4BACV,OAAO,SAAS,QAAQ;4BACxB,UAAU,CAAC,IAAM,YAAY;oCAAE,GAAG,QAAQ;oCAAE,UAAU,EAAE,MAAM,CAAC,KAAK;gCAAC;;8CAErE,6LAAC;oCAAO,OAAM;8CAAM;;;;;;8CACpB,6LAAC;oCAAO,OAAM;8CAAM;;;;;;8CACpB,6LAAC;oCAAO,OAAM;8CAAM;;;;;;;;;;;;;;;;;;8BAIxB,6LAAC;;sCACC,6LAAC;4BAAM,SAAQ;4BAAQ,WAAU;sCAA0C;;;;;;sCAG3E,6LAAC;4BACC,MAAK;4BACL,IAAG;4BACH,QAAQ;4BACR,WAAU;4BACV,OAAO,SAAS,KAAK;4BACrB,UAAU,CAAC,IAAM,YAAY;oCAAE,GAAG,QAAQ;oCAAE,OAAO,EAAE,MAAM,CAAC,KAAK;gCAAC;;;;;;;;;;;;gBAIrE,uBACC,6LAAC;oBAAI,WAAU;8BAAwB;;;;;;8BAGzC,6LAAC;oBACC,MAAK;oBACL,UAAU;oBACV,WAAU;8BAET,UAAU,kBAAkB;;;;;;;;;;;;;;;;;AAKvC;GAhHwB;KAAA","debugId":null}}]
}